{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,cACjCC,YAAaF,SAASC,cAAc,uBACpCE,MAAOH,SAASC,cAAc,WAehC,SAASG,IACP,MAAMC,EAbR,WACE,MAAMC,GAAW,EAAAV,EAAAW,eACXC,GAAO,EAAAC,EAAAC,WAGb,OAFmBC,OAAOC,KAAKJ,GAAMK,IAAIC,QAEvBC,QAAO,CAACC,EAAKC,KAC7B,MAAMC,EAAUZ,EAASa,MAAKC,GAAWA,EAAQH,KAAOA,IAClDI,EAAQb,EAAKS,GACnB,OAAOD,EAAME,EAAQI,MAAMC,OAASF,CAAK,GACxC,E,CAIgBG,GACnB1B,EAAKK,MAAMsB,YAAcpB,EAAa,mBAACA,QAA+B,E,CAExE,SAASqB,IACP,MAAMpB,GAAW,EAAAV,EAAAW,eACXC,GAAO,EAAAC,EAAAC,WACPiB,EAAahB,OAAOC,KAAKJ,GAAMK,IAAIC,QACzC,IAAKa,EAAWC,OAGd,OAFA9B,EAAKC,SAAS8B,mBAAmB,YAAa,4EAC9CzB,IAGF,MAAM0B,EAASH,EAAWd,KAAII,IAC5B,MAAMc,EAAUzB,EAASa,MAAKC,GAAWA,EAAQH,KAAOA,IAClDI,EAAQb,EAAKS,IACbe,KAAEA,EAAIV,MAAEA,EAAKW,IAAEA,GAAQF,EAC7B,MAAO,+EAgBTE,sBACAD,wHAKeA,mJAGhBX,eAAAU,EAAAd,4HAGqCK,EAAAC,UAAAD,EAAwBY,yGAC9BH,EAAYd,uBACxC,I,KACA,I,EACAlB,SAAA8B,mBAA6B,YAAAC,G,IAIjC,SAAAK,IACMxB,OAAMC,MAAO,EAAAH,EAAUC,YAAAkB,SACzB9B,EAAyBC,SAAMqC,UAAiB,GAChDV,I,GAGE3B,SAAAsC,iBAAmB,SAAAC,I,EACpBC,OAAMC,UAAAC,SAAA,0B,EACLC,EAAAC,gBAAAL,EAAeC,OAAMK,QAAO3B,I,EAC5BsB,OAAMM,QAAO,iBAAQC,S,iBAKxB/C,SAAAsC,iBAAA,UAAAC,IAEH,GAAAA,EAAAC,OAAAC,UAAAC,SAAiB,mB","sources":["src/js/cart.js"],"sourcesContent":["import { getProducts } from './local-storage-service';\r\nimport { getCart } from './session-storage-service';\r\nimport { setAmount, removeFromCart } from './cart-service';\r\n\r\nconst refs = {\r\n  cartList: document.querySelector('#cart-list'),\r\n  showMoreBtn: document.querySelector('#products-show-more'),\r\n  total: document.querySelector('#total'),\r\n}\r\n\r\nfunction getTotalPrice() {\r\n  const products = getProducts();\r\n  const cart = getCart();\r\n  const productIds = Object.keys(cart).map(Number)\r\n\r\n  return productIds.reduce((acc, id) => {\r\n    const product = products.find(product => product.id === id);\r\n    const count = cart[id];\r\n    return acc + product.price.amount * count;\r\n  }, 0);\r\n}\r\n\r\nfunction renderTotalPrice() {\r\n  const totalPrice = getTotalPrice();\r\n  refs.total.textContent = totalPrice ? `Загальна сумма: ${totalPrice} грн` : '';\r\n}\r\nfunction renderProducts() {\r\n  const products = getProducts();\r\n  const cart = getCart();\r\n  const productIds = Object.keys(cart).map(Number)\r\n  if (!productIds.length) {\r\n    refs.cartList.insertAdjacentHTML('beforeend', '<h3 class=\"catalog__list-item\">Спочатку додайте товари в кошик</h3>');\r\n    renderTotalPrice();\r\n    return;\r\n  }\r\n  const markup = productIds.map(id => {\r\n    const product = products.find(product => product.id === id);\r\n    const count = cart[id];\r\n    const { name, price, img } = product;\r\n    return `<li class=\"products-list__item js-cart-item\">\r\n        <img\r\n          src=\"${img}\"\r\n          alt=\"${name}\"\r\n          width=\"80\"\r\n          class=\"products-list__img\"\r\n        />\r\n        <h4 class=\"products-list__title\">${name}</h4>\r\n        <div class=\"products-list__amount form-input\">\r\n          <label for=\"product\"></label>\r\n          <input name=\"product\" value=\"${count}\" data-id=\"${product.id}\" class=\"form-input__input js-amount-iput\" type=\"number\" />\r\n        </div>\r\n        <div class=\"products-list__price\">${price.amount} ${price.currency}</div>\r\n        <a href=\"#\" class=\"js-remove-from-cart products-list__remove-button\" data-id=\"${product.id}\"></a>\r\n      </li>`\r\n  }).join('');\r\n  refs.cartList.insertAdjacentHTML('beforeend', markup);\r\n  renderTotalPrice();\r\n}\r\n\r\nfunction renderIfLastProductRemoved() {\r\n  if (!Object.keys(getCart()).length) {\r\n    refs.cartList.innerHTML = '';\r\n    renderProducts();\r\n  }\r\n}\r\n\r\nrefs.cartList.addEventListener('click', (event) => {\r\n  if (event.target.classList.contains('js-remove-from-cart')) {\r\n    removeFromCart(event.target.dataset.id);\r\n    event.target.closest('.js-cart-item').remove();\r\n    renderTotalPrice();\r\n    renderIfLastProductRemoved();\r\n  }\r\n}, true);\r\n\r\nrefs.cartList.addEventListener('change', (event) => {\r\n  if (event.target.classList.contains('js-amount-iput')) {\r\n    const productId = Number(event.target.dataset.id);\r\n    const amount = Number(event.target.value);\r\n    if (amount) {\r\n      setAmount(productId, amount);\r\n      renderTotalPrice();\r\n    } else {\r\n      removeFromCart(event.target.dataset.id);\r\n      event.target.closest('.js-cart-item').remove();\r\n      renderTotalPrice();\r\n      renderIfLastProductRemoved();\r\n    }\r\n  }\r\n});\r\n\r\nrenderProducts();\r\n"],"names":["$bcxib","parcelRequire","$915de8ffc4dd3149$var$refs","cartList","document","querySelector","showMoreBtn","total","$915de8ffc4dd3149$var$renderTotalPrice","totalPrice","products","getProducts","cart","$gye1E","getCart","Object","keys","map","Number","reduce","acc","id","product1","find","product","count","price","amount","$915de8ffc4dd3149$var$getTotalPrice","textContent","$915de8ffc4dd3149$var$renderProducts","productIds","length","insertAdjacentHTML","markup","product2","name","img","currency","$915de8ffc4dd3149$var$renderIfLastProductRemoved","innerHTML","addEventListener","event","target","classList","contains","$lHsho","removeFromCart","dataset","closest","remove"],"version":3,"file":"cart.a6cfe5c6.js.map"}